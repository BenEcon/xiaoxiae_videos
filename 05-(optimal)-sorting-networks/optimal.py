from itertools import permutations


networks = [
        [#2
            [(0, 1)],
        ],
        [#3
            [(1, 2)],
            [(0, 1)],
            [(1, 2)],
        ],
        [#4
            [(0, 1), (2, 3)],
            [(1, 3), (0, 2)],
            [(1, 2)],
        ],
        [#5
            [(1, 2), (3, 4)],
            [(1, 3), (0, 2)],
            [(2, 4), (0, 3)],
            [(0, 1), (2, 3)],
            [(1, 2)],
        ],
        [#6
            [(0, 1), (2, 3), (4, 5)],
            [(0, 2), (3, 5)],
            [(1, 4)],
            [(0, 1), (2, 3), (4, 5)],
            [(1, 2), (3, 4)],
            [(2, 3)],
        ],
        [#7
            [(1, 2), (3, 4), (5, 6)],
            [(0, 2), (4, 6)],
            [(3, 5)],
            [(2, 6), (1, 5), (0, 4)],
            [(2, 5), (0, 3)],
            [(2, 4), (1, 3)],
            [(0, 1), (2, 3), (4, 5)],
        ],
        [#8
            [(0, 7), (1, 6), (2, 5), (3, 4)],
            [(0, 3), (4, 7), (1, 2), (5, 6)],
            [(0, 1), (2, 3), (4, 5), (6, 7)],
            [(3, 5), (2, 4)],
            [(1, 2), (3, 4), (5, 6)],
            [(2, 3), (4, 5)],
            [(3, 4)],
        ],
        [#9
            [(1, 8), (2, 7), (3, 6), (4, 5)],
            [(0, 2), (1, 4), (5, 8), (6, 7)],
            [(2, 6), (7, 8), (0, 3), (4, 5)],
            [(0, 1), (3, 5), (6, 7), (2, 4)],
            [(1, 3), (5, 7), (4, 6)],
            [(1, 2), (3, 4), (5, 6), (7, 8)],
            [(2, 3), (4, 5)],
        ],
    ]


for i, network in enumerate(networks):
    i += 2

    # test for all permutations of numbers 0 to n
    for p in permutations(range(i)):
        p_orig = list(p)
        p = list(p)

        # simulate the network in the permutation
        for layer in network:
            for a, b in layer:
                p[a], p[b] = min(p[a], p[b]), max(p[a], p[b])

        if p != sorted(p):
            print(f"Network {i} is incorrect for input {p_orig}!")
            break
    else:
        print(f"Network {i} is correct!")
